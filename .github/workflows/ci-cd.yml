name: WendoverHOA CI/CD

on:
  # Only run on pushes to main (after PR is merged)
  # This is for deployment steps only
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - '.github/*.md'
  # Run build/test on PRs targeting main
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - '.github/*.md'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
      
    - name: Publish
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: dotnet publish src/WendoverHOA.Web/WendoverHOA.Web.csproj -c Release -o publish
      
    - name: Upload artifact
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: webapp
        path: publish/
        retention-days: 5

  basic-security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Build with security flags
      run: dotnet build --configuration Release
      
    - name: Run basic security checks
      run: |
        echo "Running basic security checks"
        # Check for hardcoded secrets (simplified version)
        ! grep -r "password\|secret\|key\|token" --include="*.cs" --include="*.json" --exclude="*Test*" src/ || echo "WARNING: Possible hardcoded secrets found"
        # Check for vulnerable patterns
        ! grep -r "SqlCommand.*ExecuteNonQuery.*\$\{" --include="*.cs" src/ || echo "WARNING: Possible SQL injection found"
        # Note: Advanced security scanning is handled by GitHub's default CodeQL setup
      continue-on-error: true
      
  dependency-review:
    runs-on: ubuntu-latest
    # Only run on pull requests to avoid duplicate runs
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      
  deploy-dev:
    needs: [build, basic-security-scan]
    runs-on: ubuntu-latest
    # Only run on pushes to main (after PR is merged)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: development
      url: https://dev.wendoverhoa.org
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: webapp
        path: publish/
        
    - name: Deploy to Development
      run: |
        echo "Deploying to development environment"
        # Deployment commands would go here
        # This is a placeholder for actual deployment to IONOS
        
  deploy-prod:
    needs: deploy-dev
    runs-on: ubuntu-latest
    # Only run on pushes to main with release commit message (after PR is merged)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'release:')
    environment:
      name: production
      url: https://wendoverhoa.org
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: webapp
        path: publish/
        
    - name: Deploy to Production
      run: |
        echo "Deploying to production environment"
        # Deployment commands would go here
        # This is a placeholder for actual deployment to IONOS
